/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package InvoiceTrackingSystem;

import CorePackage.Address;
import CorePackage.Customer;
import java.awt.Image;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author 90554
 */
public class CustomerInformationScreen extends javax.swing.JFrame {

    private Customer customer;

    /**
     * Creates new form CustomerInformationScreen
     */
    public CustomerInformationScreen() {
        initComponents();

        ImageIcon icon1 = new ImageIcon("C:\\Users\\bayra\\Downloads\\Menu30.png");
        Image img1 = icon1.getImage().getScaledInstance(30, 30, Image.SCALE_SMOOTH);
        icon1.setImage(img1);
        MenuButton.setIcon(icon1);
    }

    public CustomerInformationScreen(Customer customer) {
        this.customer = customer;
        initComponents();
        fetchCustomerDetailsFromDatabase();
        loadCustomerInformation();
        loadAddresses();
    }

    private void fetchCustomerDetailsFromDatabase() {
        if (customer != null && customer.getUsername() != null) {
            Customer fullCustomer = Customer.getCustomerByUsername(customer.getUsername());
            if (fullCustomer != null) {
                this.customer = fullCustomer;
            } else {
                JOptionPane.showMessageDialog(this, "Customer details not found in the database!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Invalid customer username!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void loadCustomerInformation() {
        if (customer != null) {
            NameTextField.setText(customer.getName());
            SurnameTextField.setText(customer.getSurname());
            UsernameTextField.setText(customer.getUsername());
            NationalIdLabel.setText(customer.getNationalIdNumber());
            PhoneTextField.setText(customer.getPhone());
            EmailTextField.setText(customer.getEmail() != null ? customer.getEmail() : "");
        }
    }

    private void loadAddresses() {
        DefaultListModel<String> addressModel = new DefaultListModel<>();

        if (customer != null && customer.getAddresses() != null) {
            for (Address address : customer.getAddresses()) {
                addressModel.addElement(address.getAddressName());
            }
        }

        AddressList.setModel(addressModel);

        AddressList.addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                String selectedAddressName = AddressList.getSelectedValue();
                if (selectedAddressName != null) {
                    Address selectedAddress = customer.getAddresses().stream()
                            .filter(address -> address.getAddressName().equals(selectedAddressName))
                            .findFirst()
                            .orElse(null);

                    if (selectedAddress != null) {
                        AddressLabel.setText(selectedAddress.getOpenAddress());
                    } else {
                        AddressLabel.setText("No address found.");
                    }
                }
            }
        });
    }

    private void saveCustomerInformation() {
        if (customer != null) {
            customer.setName(NameTextField.getText());
            customer.setSurname(SurnameTextField.getText());
            customer.setUsername(UsernameTextField.getText());
            customer.setPhone(PhoneTextField.getText());
            customer.setEmail(EmailTextField.getText());

            customer.updateCustomerDetails();
            JOptionPane.showMessageDialog(this, "Customer information updated successfully!");
        } else {
            JOptionPane.showMessageDialog(this, "Unable to save customer information!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        MenuButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        NationalIdLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        AddressList = new javax.swing.JList<>();
        AddressLabel = new javax.swing.JLabel();
        SaveButton = new javax.swing.JButton();
        DeleteAddressButton = new javax.swing.JButton();
        NameTextField = new javax.swing.JTextField();
        UsernameTextField = new javax.swing.JTextField();
        PhoneTextField = new javax.swing.JTextField();
        EmailTextField = new javax.swing.JTextField();
        AddAddressButton = new javax.swing.JButton();
        SurnameTextField = new javax.swing.JTextField();
        ChangeAddressButton = new javax.swing.JButton();
        ChangePasswordBttn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(34, 40, 44));
        jPanel1.setPreferredSize(new java.awt.Dimension(965, 657));
        jPanel1.setLayout(null);

        MenuButton.setText("Menu");
        MenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuButtonActionPerformed(evt);
            }
        });
        jPanel1.add(MenuButton);
        MenuButton.setBounds(6, 6, 60, 40);

        jLabel1.setFont(new java.awt.Font("SimSun-ExtG", 1, 32)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PERSONAL INFORMATION");
        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jLabel1);
        jLabel1.setBounds(152, 38, 659, 52);

        jLabel2.setFont(new java.awt.Font("SimSun-ExtG", 1, 14)); // NOI18N
        jLabel2.setText("Name Surname:");

        jLabel3.setFont(new java.awt.Font("SimSun-ExtG", 1, 14)); // NOI18N
        jLabel3.setText("Username:");

        jLabel4.setFont(new java.awt.Font("SimSun-ExtG", 1, 14)); // NOI18N
        jLabel4.setText("National ID Number:");

        jLabel7.setFont(new java.awt.Font("SimSun-ExtG", 1, 14)); // NOI18N
        jLabel7.setText("Addresses");

        NationalIdLabel.setFont(new java.awt.Font("SimSun-ExtG", 0, 12)); // NOI18N
        NationalIdLabel.setText("jLabel5");

        jLabel5.setFont(new java.awt.Font("SimSun-ExtG", 1, 14)); // NOI18N
        jLabel5.setText("Phone Number:");

        jLabel6.setFont(new java.awt.Font("SimSun-ExtG", 1, 14)); // NOI18N
        jLabel6.setText("Email:");

        AddressList.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jScrollPane1.setViewportView(AddressList);

        AddressLabel.setFont(new java.awt.Font("SimSun-ExtG", 0, 14)); // NOI18N
        AddressLabel.setText(".");

        SaveButton.setFont(new java.awt.Font("SimSun-ExtG", 0, 14)); // NOI18N
        SaveButton.setText("Save");
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });

        DeleteAddressButton.setFont(new java.awt.Font("SimSun-ExtG", 0, 12)); // NOI18N
        DeleteAddressButton.setText("Delete Address");
        DeleteAddressButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteAddressButtonActionPerformed(evt);
            }
        });

        NameTextField.setFont(new java.awt.Font("SimSun-ExtG", 0, 14)); // NOI18N

        UsernameTextField.setFont(new java.awt.Font("SimSun-ExtG", 0, 12)); // NOI18N
        UsernameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsernameTextFieldActionPerformed(evt);
            }
        });

        PhoneTextField.setFont(new java.awt.Font("SimSun-ExtG", 0, 12)); // NOI18N

        EmailTextField.setFont(new java.awt.Font("SimSun-ExtG", 0, 12)); // NOI18N

        AddAddressButton.setFont(new java.awt.Font("SimSun-ExtG", 0, 12)); // NOI18N
        AddAddressButton.setText("Add Address");
        AddAddressButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddAddressButtonActionPerformed(evt);
            }
        });

        SurnameTextField.setFont(new java.awt.Font("SimSun-ExtG", 0, 12)); // NOI18N

        ChangeAddressButton.setFont(new java.awt.Font("SimSun-ExtG", 0, 12)); // NOI18N
        ChangeAddressButton.setText("Change Address");
        ChangeAddressButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangeAddressButtonActionPerformed(evt);
            }
        });

        ChangePasswordBttn.setFont(new java.awt.Font("SimSun-ExtG", 0, 12)); // NOI18N
        ChangePasswordBttn.setText("Change Password");
        ChangePasswordBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangePasswordBttnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(85, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(ChangePasswordBttn)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(AddAddressButton))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(AddressLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(DeleteAddressButton, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(ChangeAddressButton, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(62, 62, 62)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(EmailTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(PhoneTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(UsernameTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(NationalIdLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(NameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(SurnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(78, 78, 78))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SaveButton)
                .addGap(40, 40, 40))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ChangePasswordBttn)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NameTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                    .addComponent(SurnameTextField, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UsernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(NationalIdLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(PhoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(EmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AddAddressButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(DeleteAddressButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ChangeAddressButton))
                    .addComponent(AddressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(SaveButton)
                .addGap(16, 16, 16))
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(152, 108, 660, 540);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void UsernameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsernameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UsernameTextFieldActionPerformed

    private void DeleteAddressButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteAddressButtonActionPerformed
        String selectedAddressName = AddressList.getSelectedValue();

        if (selectedAddressName != null && customer != null) {
            Address selectedAddress = customer.getAddresses().stream()
                    .filter(address -> address.getAddressName().equals(selectedAddressName))
                    .findFirst()
                    .orElse(null);

            if (selectedAddress != null) {
                customer.deleteAddress(selectedAddress);
                customer.getAddresses().remove(selectedAddress);

                DefaultListModel<String> addressModel = (DefaultListModel<String>) AddressList.getModel();
                addressModel.removeElement(selectedAddressName);
                AddressLabel.setText("");

                JOptionPane.showMessageDialog(this, "Address deleted successfully!");
            } else {
                JOptionPane.showMessageDialog(this, "Address not found in the list.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select an address to delete.");
        }

    }//GEN-LAST:event_DeleteAddressButtonActionPerformed

    private void ChangeAddressButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangeAddressButtonActionPerformed
        String selectedAddressName = AddressList.getSelectedValue();

        if (selectedAddressName != null && customer != null) {
            Address selectedAddress = customer.getAddresses().stream()
                    .filter(address -> address.getAddressName().equals(selectedAddressName))
                    .findFirst()
                    .orElse(null);

            if (selectedAddress != null) {
                AddressScreen addressScreen = new AddressScreen(customer, selectedAddress);
                addressScreen.setVisible(true);
                dispose(); 
            } else {
                JOptionPane.showMessageDialog(this, "Selected address not found!");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select an address to change.");
        }
    }//GEN-LAST:event_ChangeAddressButtonActionPerformed

    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed
        saveCustomerInformation();
    }//GEN-LAST:event_SaveButtonActionPerformed

    private void ChangePasswordBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangePasswordBttnActionPerformed
        ChangePasswordScreen changePasswordScreen = new ChangePasswordScreen(customer);
        changePasswordScreen.setVisible(true);
        dispose();
    }//GEN-LAST:event_ChangePasswordBttnActionPerformed

    private void AddAddressButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddAddressButtonActionPerformed
        AddressScreen addressScreen = new AddressScreen(customer);
        addressScreen.setVisible(true);
        dispose();
    }//GEN-LAST:event_AddAddressButtonActionPerformed

    private void MenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuButtonActionPerformed
        CustomerScreen customerScreen = new CustomerScreen(customer);
        customerScreen.setVisible(true);
        dispose();
    }//GEN-LAST:event_MenuButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerInformationScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerInformationScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerInformationScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerInformationScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerInformationScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddAddressButton;
    private javax.swing.JLabel AddressLabel;
    private javax.swing.JList<String> AddressList;
    private javax.swing.JButton ChangeAddressButton;
    private javax.swing.JButton ChangePasswordBttn;
    private javax.swing.JButton DeleteAddressButton;
    private javax.swing.JTextField EmailTextField;
    private javax.swing.JButton MenuButton;
    private javax.swing.JTextField NameTextField;
    private javax.swing.JLabel NationalIdLabel;
    private javax.swing.JTextField PhoneTextField;
    private javax.swing.JButton SaveButton;
    private javax.swing.JTextField SurnameTextField;
    private javax.swing.JTextField UsernameTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
