package InvoiceTrackingSystem;

import CorePackage.Bill;
import CorePackage.Customer;
import CorePackage.DBConnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author bayra
 */
public class CustomerInvoicesScreen extends javax.swing.JFrame {

    /**
     * Creates new form InvoicesScreen
     */
    private String loggedInUsername;
    private Customer customer;

    public CustomerInvoicesScreen(String username) {
        this.loggedInUsername = username; 
        initComponents(); 
        setupTableModel(); 

        creditCardPanel.setVisible(false);

        if (username == null || username.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No logged-in user found.", "Error", JOptionPane.ERROR_MESSAGE);
            this.dispose();
            return;
        }
        fetchCustomerDetailsFromDatabase();

    }

    public CustomerInvoicesScreen(Customer customer) {
        this.customer = customer;
        initComponents();
        setupTableModel(); 
        creditCardPanel.setVisible(false);
        fetchCustomerDetailsFromDatabase();
    }

    public CustomerInvoicesScreen() {
        initComponents();
        setupTableModel(); 
        creditCardPanel.setVisible(false);
        fetchCustomerDetailsFromDatabase();
    }

    private void fetchCustomerDetailsFromDatabase() {
        if (customer != null && customer.getUsername() != null) {
            Customer fullCustomer = Customer.getCustomerByUsername(customer.getUsername());
            if (fullCustomer != null) {
                this.customer = fullCustomer;
            } else {
                JOptionPane.showMessageDialog(this, "Customer details not found in the database!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Invalid customer username!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void setupTableModel() {
        tableModel = new DefaultTableModel(new Object[][]{}, new String[]{
            "Invoice ID", "Subscription Type", "Issue Date", "Due Date", "Total Amount", "Pay Status"
        });
        invoiceTable.setModel(tableModel); 
    }

    private DefaultTableModel tableModel;

    public static boolean luhnControlMethod(String cardNumber) {
        if (cardNumber == null || cardNumber.length() < 13 || cardNumber.length() > 19) {
            return false;
        }

        int sum = 0;
        boolean alternate = false;
        for (int i = cardNumber.length() - 1; i >= 0; i--) {
            int n = Integer.parseInt(cardNumber.substring(i, i + 1));
            if (alternate) {
                n *= 2;
                if (n > 9) {
                    n -= 9;
                }
            }
            sum += n;
            alternate = !alternate;
        }
        return (sum % 10 == 0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        MenuButton2 = new javax.swing.JButton();
        invoicesLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        SubsTypeComboBox = new javax.swing.JComboBox<>();
        searchButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        invoiceTable = new javax.swing.JTable();
        creditCardPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cardNoTxtField = new javax.swing.JTextField();
        dayComboBox = new javax.swing.JComboBox<>();
        monthComboBox = new javax.swing.JComboBox<>();
        cvvTxtField = new javax.swing.JTextField();
        payButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        PayStatusComboBox = new javax.swing.JComboBox<>();
        logOutButton = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(34, 40, 44));

        MenuButton2.setText("Menu");
        MenuButton2.setPreferredSize(new java.awt.Dimension(36, 36));
        MenuButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuButton2ActionPerformed(evt);
            }
        });

        invoicesLabel.setFont(new java.awt.Font("SimSun-ExtG", 1, 48)); // NOI18N
        invoicesLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        invoicesLabel.setText("  INVOICES");
        invoicesLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setFont(new java.awt.Font("SimSun-ExtG", 0, 14)); // NOI18N
        jLabel2.setText("Subscription Type");

        SubsTypeComboBox.setFont(new java.awt.Font("SimSun-ExtG", 0, 14)); // NOI18N
        SubsTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Subscription", "Water", "Electricity", "Natural Gas" }));

        searchButton.setFont(new java.awt.Font("SimSun-ExtG", 0, 14)); // NOI18N
        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        invoiceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(invoiceTable);

        jLabel4.setFont(new java.awt.Font("SimSun-ExtG", 0, 14)); // NOI18N
        jLabel4.setText("Credit Card Number");

        jLabel5.setFont(new java.awt.Font("SimSun-ExtG", 0, 14)); // NOI18N
        jLabel5.setText("Expiration Date");

        jLabel6.setFont(new java.awt.Font("SimSun-ExtG", 0, 14)); // NOI18N
        jLabel6.setText("CVV");

        dayComboBox.setFont(new java.awt.Font("SimSun-ExtG", 0, 14)); // NOI18N
        dayComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", " " }));

        monthComboBox.setFont(new java.awt.Font("SimSun-ExtG", 0, 14)); // NOI18N
        monthComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Year", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040" }));

        payButton.setFont(new java.awt.Font("SimSun-ExtG", 0, 14)); // NOI18N
        payButton.setText("PAY");
        payButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout creditCardPanelLayout = new javax.swing.GroupLayout(creditCardPanel);
        creditCardPanel.setLayout(creditCardPanelLayout);
        creditCardPanelLayout.setHorizontalGroup(
            creditCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(creditCardPanelLayout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addGroup(creditCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(creditCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cvvTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(creditCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(payButton)
                        .addGroup(creditCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cardNoTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(creditCardPanelLayout.createSequentialGroup()
                                .addComponent(dayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(monthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(138, Short.MAX_VALUE))
        );
        creditCardPanelLayout.setVerticalGroup(
            creditCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(creditCardPanelLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(creditCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cardNoTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(creditCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(dayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(monthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(creditCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cvvTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(payButton)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jLabel7.setFont(new java.awt.Font("SimSun-ExtG", 0, 14)); // NOI18N
        jLabel7.setText("Pay Status:");

        PayStatusComboBox.setFont(new java.awt.Font("SimSun-ExtG", 0, 14)); // NOI18N
        PayStatusComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Status", "Paid", "Unpaid" }));

        logOutButton.setText("LOG OUT");
        logOutButton.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 204, 255), null));
        logOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(MenuButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(logOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 881, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(116, 116, 116)
                                .addComponent(creditCardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(144, 144, 144)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(invoicesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 667, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel3))
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(PayStatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(SubsTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                        .addGap(0, 39, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MenuButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logOutButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(invoicesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(PayStatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(SubsTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchButton)
                    .addComponent(jLabel3))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(creditCardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MenuButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuButton2ActionPerformed
        CustomerScreen customerScreen = new CustomerScreen(customer);
        customerScreen.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_MenuButton2ActionPerformed


    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        creditCardPanel.setVisible(false);

        String selectedPayStatus = (String) PayStatusComboBox.getSelectedItem();
        String selectedSubsType = (String) SubsTypeComboBox.getSelectedItem();

        if ("Choose Status".equals(selectedPayStatus) && "Choose Subscription".equals(selectedSubsType)) {
            JOptionPane.showMessageDialog(this, "Please select valid Pay Status or Subscription Type.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if ("Unpaid".equals(selectedPayStatus)) {
            creditCardPanel.setVisible(true); 
        } else {
            creditCardPanel.setVisible(false); 
        }

        String query = "SELECT i.invoice_id, st.subscription_type_name, i.issue_date, i.due_date, "
                + "i.total_amount, i.payment_status "
                + "FROM Invoice i "
                + "JOIN Subscription s ON i.subscription_id = s.subscription_id "
                + "JOIN Subscription_Type st ON s.subscription_type_id = st.subscription_type_id "
                + "JOIN Customer c ON s.National_id = c.idnum "
                + "WHERE c.idnum = ? "
                + "AND (st.subscription_type_name = ? OR ? = 'Choose Subscription') "
                + "AND (i.payment_status = ? OR ? = 'Choose Status')";

        try ( Connection conn = DBConnection.getConnection();  PreparedStatement stmt = conn.prepareStatement(query)) {

            String idnum = customer.getNationalIdNumber();
            if (idnum == null) {
                JOptionPane.showMessageDialog(this, "Customer ID not found.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            stmt.setString(1, idnum); 
            stmt.setString(2, selectedSubsType); 
            stmt.setString(3, selectedSubsType); 
            stmt.setString(4, selectedPayStatus); 
            stmt.setString(5, selectedPayStatus); 

            ResultSet rs = stmt.executeQuery();
            DefaultTableModel model = (DefaultTableModel) invoiceTable.getModel();
            model.setRowCount(0);

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getInt("invoice_id"),
                    rs.getString("subscription_type_name"),
                    rs.getDate("issue_date"),
                    rs.getDate("due_date"),
                    rs.getDouble("total_amount"),
                    rs.getString("payment_status")
                });
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "An error occurred while fetching invoices.", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_searchButtonActionPerformed

    private void payButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payButtonActionPerformed
        int selectedRow = invoiceTable.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select an unpaid invoice.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int invoiceId = (int) invoiceTable.getValueAt(selectedRow, 0);
        String paymentStatus = (String) invoiceTable.getValueAt(selectedRow, 5);

        if (!"Unpaid".equals(paymentStatus)) {
            JOptionPane.showMessageDialog(this, "Only unpaid invoices can be paid.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String cardNumber = cardNoTxtField.getText();
        String cvv = cvvTxtField.getText();
        String expMonth = (String) dayComboBox.getSelectedItem();
        String expYear = (String) monthComboBox.getSelectedItem();

        if (cardNumber.isEmpty() || cvv.isEmpty() || "Month".equals(expMonth) || "Year".equals(expYear)) {
            JOptionPane.showMessageDialog(this, "Please fill in all credit card details.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (!luhnControlMethod(cardNumber)) {
            JOptionPane.showMessageDialog(this, "Invalid credit card number.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (Bill.payInvoice(invoiceId)) {
            JOptionPane.showMessageDialog(this, "Payment successful!", "Success", JOptionPane.INFORMATION_MESSAGE);
            refreshTable();
        } else {
            JOptionPane.showMessageDialog(this, "Payment failed. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_payButtonActionPerformed

    private void logOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutButtonActionPerformed
        StartScreen startScreen = new StartScreen();
        startScreen.setVisible(true);
        dispose();
    }//GEN-LAST:event_logOutButtonActionPerformed

    private void refreshTable() {
        searchButtonActionPerformed(null); 
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerInvoicesScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerInvoicesScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerInvoicesScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerInvoicesScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerInvoicesScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton MenuButton2;
    private javax.swing.JComboBox<String> PayStatusComboBox;
    private javax.swing.JComboBox<String> SubsTypeComboBox;
    private javax.swing.JTextField cardNoTxtField;
    private javax.swing.JPanel creditCardPanel;
    private javax.swing.JTextField cvvTxtField;
    private javax.swing.JComboBox<String> dayComboBox;
    private javax.swing.JTable invoiceTable;
    private javax.swing.JLabel invoicesLabel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton logOutButton;
    private javax.swing.JComboBox<String> monthComboBox;
    private javax.swing.JButton payButton;
    private javax.swing.JButton searchButton;
    // End of variables declaration//GEN-END:variables
}
